# PAM and sudo using fingerprint
- name: '[fingerprint] Install pam-reattach custom pam-reattach module (sudo with FP sensor, works with iTerm2 & Tmux)'
  community.general.homebrew:
    name: pam-reattach
    state: present
  register: macterm_pam_install
  until: macterm_pam_install is succeeded

- name: '[fingerprint] Check if pam-reattach was correctly installed'
  ansible.builtin.stat:
    path: "{{ macterm_brew_prefix.stdout }}/lib/pam/pam_reattach.so"
  register: macterm_pam_reattach_so

- name: '[fingerprint] Modify PAM config for sudo to make Fingerprint work with iTerm & Tmux'
  ansible.builtin.template:
    src: etc.pam.d.sudo.j2
    dest: /etc/pam.d/sudo
    backup: true
    owner: root
    group: wheel
    mode: 0444
  become: true
  when: macterm_pam_reattach_so.stat.exists

# GPG and pinentry using fingerprint
- name: '[fingerprint] Install packages: pinentry-mac, pinentry-touchid (gpg passphrases with fingerprint)'
  community.general.homebrew:
    name: "{{ package }}"
    state: present
  register: macterm_package_install
  until: macterm_package_install is succeeded
  notify:
  - Fix pinentry symlinks
  - Reload gpg-agent
  loop:
    - pinentry-mac
    - jorgelbg/tap/pinentry-touchid
  loop_control:
    loop_var: package

- name: '[fingerprint] Configure ~/.gnupg/gpg-agent.conf according to brew info pinentry-touchid'
  ansible.builtin.lineinfile:
    path: ~/.gnupg/gpg-agent.conf
    regexp: '^pinentry-program '
    line: "pinentry-program {{ macterm_brew_prefix.stdout }}/bin/pinentry-touchid"
  notify:
  - Fix pinentry symlinks
  - Reload gpg-agent

- name: '[fingerprint] Disable "Save in Keychain" in pinentry-mac for pinentry-touchid to work'
  community.general.osx_defaults:
    domain: org.gpgtools.common
    key: DisableKeychain
    type: bool
    value: true
    state: present
